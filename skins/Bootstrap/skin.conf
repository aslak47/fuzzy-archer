############################################################################################
############################################################################################
############################################################################################
#                                                                                          #
#                                                                                          #
#                          STANDARD SKIN CONFIGURATION FILE                                #
#                                                                                          #
#                                                                                          #
############################################################################################
#                                                                                          #
#                    Copyright (c) 2010 Tom Keffer <tkeffer@gmail.com>                     #
#                                                                                          #
#                      See the file LICENSE.txt for your full rights.                      #
#                                                                                          #
############################################################################################
#
#    $Revision: 737 $
#    $Author: tkeffer $
#    $Date: 2012-11-04 09:05:51 -0800 (Sun, 04 Nov 2012) $
#
############################################################################################

[Extras]

    #
    # Put any extra tags here that you want to be available in the templates
    #
    
    # Here's an example. 
    # This radar image would be available as $Extras.radar_img
    # (Comment the line out if you don't want to include the radar image)
    radar_img = http://radar.weather.gov/ridge/lite/N0R/RTX_loop.gif
    # This URL will be used as the image hyperlink:
    radar_url = http://radar.weather.gov/ridge/radar.php?product=NCR&rid=RTX&loop=yes
    
    # Here's another. If you have a Google Analytics ID, uncomment and edit 
    # the next line, and the analytics code will automatically be included
    # in your generated HTML files:
    #googleAnalyticsId = UA-12345678-1
    
############################################################################################

[Language]

    #
    # Set a language below and labels will be overridden with any that are specified in
    # skins/languages/[language].conf
    #
    # Choices are: espanol, francais, italian, german

    language = german

############################################################################################

[Almanac]

    # The labels to be used for the phases of the moon:
    moon_phases = New, Waxing crescent, First quarter, Waxing gibbous, Full, Waning gibbous, Last quarter, Waning crescent

############################################################################################

[CheetahGenerator]

    # This section is used by the generator CheetahGenerator, and specifies
    # which files are to be generated from which template.

    encoding = utf8    # Possible encodings are 'html_entities', 'utf8', or 'strict_ascii'


    search_list_extensions = user.historygenerator.MyXSearch

    [[SummaryByMonth]]
        #
        # Reports that summarize "by month"
        #
        [[[NOAA_month]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY-MM.txt.tmpl

    [[SummaryByYear]]
        #
        # Reports that summarize "by year"
        #
        [[[NOAA_year]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY.txt.tmpl

    [[ToDate]]
        #
        # Reports that show statistics "to date", such as day-to-date,
        # week-to-date, month-to-date, etc.
        #
        [[[history]]]
            template = history.html.tmpl

    [[HTMLFiles]]
        #
        # Pages that do not require time interval specific tags
        #
        [[[about]]]
            template = about.html.tmpl

        [[[news]]]
            template = news.html.tmpl

        [[[stats]]]
            template = stats.html.tmpl

        [[[day]]]
            template = day.html.tmpl

        [[[week]]]
            template = week.html.tmpl

        [[[month]]]
            template = month.html.tmpl

        [[[year]]]
            template = year.html.tmpl

        [[[live]]]
            template = index.html.tmpl

############################################################################################

[CopyGenerator]

    #
    # This section is used by the generator CopyGenerator
    #

    # List of files that are to be copied at the first invocation of the generator only
    copy_once = css/*, js/*

    # List of files to be copied every time:
    # copy_always =

############################################################################################

[BootstrapLabels]

    #
    # Labels specific to the Bootstrap template
    #

    title = "Das Wetter in Rif"
    location_href = "https://de.wikipedia.org/wiki/Hallein"
    footer = "" # "&copy; Ampelmann 2014"

    [[live]]
        current_conditions = Current Conditions

    [[headings]]
        front_page  = The Weather
        stats       = Stats
        history     = History
        news        = News
        about       = About
        last_update = Last updated

    [[timespans]]
        live     = Live!
        day      = Last 24 hours
        today    = Today            # today = any time since midnight
        week     = This week
        month    = This Month
        year     = This Year
        ever     = Since ever

    [[status]]
        latitude       = Latitude:
        longitude      = Longitude:
        altitude       = Altitude:
        station_uptime = Station uptime:
        server_uptime  = Server uptime:

    [[history_tables]]
        min_temp = Minimum Temperature
        max_temp = Maximum Temperature
        avg_temp = Average Temperature
        rain     = Rainfall
        rainRate = Rain Rate
        rain_days = Days With Rainfall
        NOAA     = NOAA Data

    [[minmax]]
        min = Low
        max = High

    [[Almanac]]

        # The labels to be used for the phases of the moon:
        moon_phases = New, Waxing crescent, First quarter, Waxing gibbous, Full, Waning gibbous, Last quarter, Waning crescent
        sunset      = Sunset
        sunrise     = Sunrise

############################################################################################

[HistoryReport]

    #
    # Settings for the HTML month/year colour coded summary table generator
    #

    # minvalues, maxvalues and colours and fontColours should contain the same number of elements.
    #
    # For example,  the [min_temp] example below, if the minimum temperature measured in
    # a month is between -50 and -10 (degC) then the cell will be shaded in html colour code #0029E5.
    #
    # colours = background colour
    # fontColours = foreground colour [optional, defaults to black if omitted]

    # Default is temperature scale
    minvalues = -50, -30, -28, -26, -24, -22, -20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 45
    maxvalues = -30, -28, -26, -24, -22, -20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 45, 60
    colours = "#404240", "#646664", "#8C8A8C", "#B4B2B4", "#CCCECC", "#E4E6E4", "#743274", "#AC32AC", "#CC32CC", "#FC32FC", "#FC9AFC", "#143dde", "#3466FC", "#349AFC", "#34CEFC", "#34FEFC", "#047604", "#049A04", "#04BA04", "#04DE04", "#04FE04", "#FCFE34", "#FCEE34", "#FCDE34", "#FCCE34", "#FCBA34", "#FCAA04", "#FC9A04", "#FC7604", "#FC0204", "#EC0204", "#CC0204", "#BC0204", "#AC0204", "#9C0204", "#8C0204", "#740204", "#5C0204"
    fontColours = "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
    monthnames = "Jan", "Feb", "Mar", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"

    # Restrict the size of the table by ignoring everything before startdate
    # Specify in unix epoch time. e.g. 1325376000 is 1-Jan-2012
    #startdate = 1325376000
    # The Raspberry Pi typically takes 15+ seconds to calculate all the summaries with a few years of weather date.
    # refresh_interval is how often in minutes the tables are calculated.
    refresh_interval = 60

    [[min_temp]]
        obs_type = outTemp                 # obs_type can be any weewx reading
        aggregate_type = min               # Any of these: 'sum', 'count', 'avg', 'max', 'min'
        summary_column = true
        summary_heading = "Jahr"

    #
    # Can also use these aggregate_types:  'max_ge', 'max_le', 'min_le', 'sum_ge' to count days
    # where an observation is ge: greater of equalto, or le: lessthan or equal to a threshold value
    # To specify this threshold, use: aggregate_threshold = [value], [units]
    #
    # e.g Specify temperature threshold of 20C:  aggregate_threshold = 20, degree_C
    #

    [[max_temp]]
        obs_type = outTemp
        aggregate_type = max
        summary_column = true
        summary_heading = "Jahr"

    [[avg_temp]]
        obs_type = outTemp
        aggregate_type = avg
        summary_column = true
        summary_heading = "Jahr"

    [[rain]]
        obs_type = rain
        aggregate_type = sum
        summary_column = true
        summary_heading = "Jahr"

        #minvalues = 0, 25, 50, 75, 100, 150   # Override default temperature colour scheme with rain specific scale
        #maxvalues = 25, 50, 75, 100, 150, 1000
        #colours = "#E0F8E0", "#A9F5A9", "#58FA58", "#2EFE2E", "#01DF01", "#01DF01"

        minvalues = 0, 25, 50, 75, 100, 150, 200, 250, 300, 350, 390, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900   # Override default temperature colour scheme with rain specific scale
        maxvalues = 25, 50, 75, 100, 150, 200, 250, 300, 350, 390, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 5000
        colours = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d", "#ffffff", "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rainRate]]
        obs_type = rainRate
        aggregate_type = max
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 10, 20, 30, 40, 50, 60, 70, 80, 90
        maxvalues = 10, 20, 30, 40, 50, 60, 70, 80, 90, 1000
        colours = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rain_days]]
        obs_type = rain
        units = Days                        # Override default table units label
        aggregate_type = sum_ge
        aggregate_threshold = 1, mm
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 5, 10, 15, 20, 25, 31, 100, 120, 140, 160, 180, 200   # Override default temperature colour scheme with rain specific scale
        maxvalues = 5, 10, 15, 20, 25, 31, 100, 120, 140, 160, 180, 200, 365
        colours = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#ffffff", "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[max_wind]]
        obs_type = windGust
        aggregate_type = max
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 1, 5, 11, 19, 29, 39, 50, 61, 74, 88, 102, 118
        maxvalues = 1, 5, 11, 19, 29, 39, 49, 61, 74, 88, 102, 118, 200
        colours = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[desert_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 35, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
        maxvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 365
        colours = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

	  [[hot_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 30, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 1, 2, 3, 5, 7, 9, 11, 13, 15, 18, 22
        maxvalues = 1, 2, 3, 5, 7, 9, 11, 13, 15, 18, 22, 365
        colours = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

    [[summer_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = max_ge
        aggregate_threshold = 25, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22
        maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 365
        colours = "#fceded", "#fcdbdb", "#fcc0c0", "#fcaaaa", "#fc9090", "#fc7a7a", "#fc6060", "#fc4c4c", "#fc3030", "#fc1b1b", "#fc1b1b", "#fc0000"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"

    [[vegetation_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = avg_ge
        aggregate_threshold = 5, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 1, 5, 10, 20, 27, 32, 190, 220, 240, 260, 280
        maxvalues = 1, 5, 10, 20, 27, 32, 190, 220, 240, 260, 280, 365
        colours = "#f0f0f0", "#c6fcc6", "#9bfc9b", "#64fc64", "#28fc28", "#00c800", "#f0f0f0", "#c6fcc6", "#9bfc9b", "#64fc64", "#28fc28", "#00c800"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

    [[frost_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = min_le
        aggregate_threshold = 0, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 31
        maxvalues = 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 31, 365
        colours = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbbb", "#bbbbbb", "#333333", "#333333", "#333333"

    [[ice_days]]
        obs_type = outTemp
        units = Days                        # Override default table units label
        aggregate_type = max_le
        aggregate_threshold = 0, degree_C
        summary_column = true
        summary_heading = "Jahr"

        minvalues = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18
        maxvalues = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 365
        colours = "#EDEDFC", "#E0E0FC", "#D0D0FC", "#C0C0FC", "#B0B0FC", "#A0A0FC", "#9090FC", "#8080FC", "#7070FC", "#6060FC", "#5050FC", "#4040FC", "#6020FC", "#9015FC", "#AF10FC", "#CC10FC"
        fontColours = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbbb", "#bbbbbb", "#333333", "#333333", "#333333"


    [[NOAA]]
        #
        # Creates a table of links to NOAA reports with the tag $NOAA_table
        # Comment out [[NOAATable]] if you do not need this.
        #

        # Where to find the NOAA files and how they are named
        # Uses Python datetime convention (docs.python.org/2/library/datetime.html):
        # %Y = YYYY, %y = YY, %m = MM, etc.
        #
        year_filename = NOAA/NOAA-%Y.txt
        month_filename = NOAA/NOAA-%Y-%m.txt


############################################################################################

[GaugeGenerator]

    #
    # Settings for the Gauge Generator
    #

    image_width = 160
    image_height = 160

    # Anti aliasing makes nicer looking gauges.
    # 2 = generate a gauge image twice the final size and shrink it back down using anti aliasing.
    anti_alias = 3
    line_thickness = 1.4

    #test_none_readings = true

    # Where to save JSON history data for live browser rendered gauges. Leaving blank skip generating this.
    gauge_history_json = weewxData.js

    # Colors...
    #
    # Format is 0xBBGGRR, so a pinky-purple color (r=FF, g=00, B=99) which would have
    # an HTML tag of #FF0099 is expressed as 0x9900FF
    fill_color = 0x4242b4
    background_color = 0xffffff
    label_color = 0x000000
    dial_color = 0x707070
    needle_outline_color = 0xb48242
    needle_fill_color = 0xb48242   # Leave option out for a transparent needle
    text_color = 0xb48242

    # How far the gauge extends, e.g. 180 is half a full dial, 270 is three quarters
    # This is ignored when plotting wind direction which always uses 360.
    # Must be an integer
    dial_arc = 270

    # Most options can be omitted, however majorstep is mandatory. minvalue and maxvalue are required for all
    # gauges except wind direction.

    digitfontsize = 14
    labelfontsize = 15
    [[outTemp]]
        minvalue = -20
        maxvalue = 40
        majorstep = 10
        minorstep = 2
        digitformat = %d
        history = 24
        bins = 90

    [[barometer]]
        minvalue = 970
        maxvalue = 1050
        majorstep = 20
        minorstep = 5
        digitformat = %d
        history = 24
        bins = 80

    [[outHumidity]]
        minvalue = 0
        maxvalue = 100
        majorstep = 20
        minorstep = 5
        history = 24
        bins = 50

    [[windSpeed]]
        minvalue = 0
        maxvalue = 100
        majorstep = 20
        minorstep = 5
        history = 24
        bins = 40

        # Weewx returns None if no reading is returned from the weather station. Set none_value if you still want
        # the gauge to be drawn with a needle and a value. Otherwise the needle is omitted and "N/A" is displayed
        # on the gauge.
        none_value = 0

    [[windGust]]
        minvalue = 0
        maxvalue = 160
        majorstep = 20
        minorstep = 5
        history = 24
        bins = 40
        none_value = 0

    [[windDir]]
        majorstep = 90
        minorstep = 30
        invert = false
        history = 24
        bins = 16
        aggregate_type = None
        compass_labels = 1

###  Uncomment to generate a wind rose gauge
#
#    [[windRose]]
#        image_width = 360
#        image_height = 360
#        majorstep = 45
#        minorstep = 22.5
#        invert = false
#        history = 24
#        bins = 16
#        digitformat = None
#        compass_labels = 1
#
#        # Place rings at beaufort scale in knots
#        rings = 1,4,7,11,17,22,28,34,41,48,56,64,200
#
#        # Color rings from green to red
#        ring_colors = 0xbbffdd, 0x55aa00, 0x00ff00, 0x00ffaa, 0xffff00, 0x00ffff, 0x00ccff, 0x0077dd, 0x0000ff, 0x8800ff, 0xff55ff, 0x8800bb, 0xff0000
#
#        needle_fill_color = None    # transparent
#        aggregate_type = None       # much quicker db query without aggregation
###

############################################################################################
[JSONGenerator]
    enabled = true
    # Where to save JSON data for live rendered gauges and charts. Leaving blank skip generating this.
    frontend_data_json = weewxData.js
    timespan = 27
    locale = de_AT
    [[MQTT]]
        [[[connections]]]
            [[[[my_mqtt_with_public_tokens]]]]
                broker_connection = wss://mqtt.flespi.io:443
                mqtt_username = i29R5vj2zIMVKQlXvvGeJYQntKBreHVkxU1sd8jCHVohCz2VTx0qjGDBg4QizBtX # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
                mqtt_password = i29R5vj2zIMVKQlXvvGeJYQntKBreHVkxU1sd8jCHVohCz2VTx0qjGDBg4QizBtX # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
                [[[[[topics]]]]]
                      # JSON topics hold their value(s) in a JSON object. Every key can be matched to a gauge/chart dataset
                      [[[[[[weather/loop]]]]]]
                          type = JSON
                      [[[[[[weather/pvPrivate]]]]]]
                          type = JSON

[LiveGauges]
    [[outTemp]] #choose weewx field name
        payload_key = outTemp_C
        minvalue = -20
        maxvalue = 40
        splitnumber = 6
        lineColor = '#428bca', '#b44242' # colors are RGBa
        lineColorUntil = 0, maxvalue # color from start of gauge to value
        decimals = 1

    [[barometer]]
        payload_key = barometer_mbar
        minvalue = 970
        maxvalue = 1050
        splitnumber = 4
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 1013, maxvalue
        decimals = 1

    [[outHumidity]]
        payload_key = outHumidity
        #payload_key = extraHumid1
        minvalue = 0
        maxvalue = 100
        splitnumber = 5
        lineColor = '#428bca'
        lineColorUntil = maxvalue
        decimals = 0

    [[windSpeed]]
        payload_key = windSpeed_mps
        source_unit = meter_per_second
        minvalue = 0
        maxvalue = 100
        splitnumber = 5
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 75, maxvalue
        decimals = 0

    [[windGust]]
        payload_key = windGust_mps
        source_unit = meter_per_second
        minvalue = 0
        maxvalue = 160
        splitnumber = 8
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 75, maxvalue
        decimals = 0

    [[windDir]]
        payload_key = windDir
        lineColorN = '#428bca'
        lineColorS = '#b44242'
        decimals = 0
[LiveCharts]
    [[outTemp]] # choose freely
        [[[outTemp]]] #choose weewx field name
          payload_key = outTemp_C
          showMaxMarkPoint = true
          showMinMarkPoint = true
          showAvgMarkLine = true
          lineColor = '#428bca'
          decimals = 1
        [[[dewpoint]]]
          #payload_key = dewpoint1_C
          payload_key = dewpoint_C
          showMaxMarkPoint = false
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#b44242'
          decimals = 1

    [[rain]]
        aggregate_interval_minutes = 30
        [[[rain]]]
          payload_key = rain_mm
          showMaxMarkPoint = false
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 1

    [[barometer]]
        yAxis_axisLabel_align = center
        [[[barometer]]]
          payload_key = barometer_mbar
          showMaxMarkPoint = true
          showMinMarkPoint = true
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 1

    [[outHumidity]]
      [[[outHumidity]]]
          payload_key = outHumidity
          #payload_key = extraHumid1
          showMaxMarkPoint = true
          showMinMarkPoint = true
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 0

    [[wind]]
      [[[windSpeed]]]
          payload_key = windSpeed_mps
          source_unit = meter_per_second
          showMaxMarkPoint = false
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 0
      [[[windGust]]]
          payload_key = windGust_mps
          source_unit = meter_per_second
          showMaxMarkPoint = true
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#b44242'
          unit = %d
          decimals = 0

    [[windDir]]
      [[[windDir]]]
          payload_key = windDir
          showMaxMarkPoint = false
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 0
          symbol = circle
          symbolSize = 1
          lineWidth = 0

    [[pvOutput]]
      [[[radiation]]]
          payload_key = powerAC
          convertFunction = "function(value) { return value / 3000; }"
          showMaxMarkPoint = true
          showMinMarkPoint = false
          showAvgMarkLine = false
          lineColor = '#428bca'
          unit = %d
          decimals = 3
############################################################################################
#
# The list of generators that are to be run:
#
[Generators]
        generator_list = user.translategenerator.JSONGeneratorTranslated, user.gaugeengine.GaugeGenerator, user.translategenerator.CheetahGeneratorTranslated, weewx.reportengine.CopyGenerator
